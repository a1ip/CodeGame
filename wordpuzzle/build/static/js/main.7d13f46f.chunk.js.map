{"version":3,"sources":["words lazy /^/.//.*$/ groupOptions: {} namespace object","layout/modal.js","layout/help.js","layout/header.js","layout/guess-list.js","constants.js","layout/letters-panel.js","layout/reply-and-response.js","App.js","serviceWorker.js","index.js"],"names":["map","./four","./four.js","./six","./six.js","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Modal","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","document","getElementById","className","closeOnEsc","bind","assertThisInitialized","addEventListener","ReactDOM","createPortal","renderModal","_this2","react_default","a","createElement","onClick","closeOnOverlay","concat","title","children","renderBtn","btnType","_this3","onClose","keyCode","removeEventListener","replace","React","Component","Help","modal_Modal","showClose","onHelpClose","DEFAULT_STATE","modalActive","helpPanelActive","Header","state","coins","onStart","setState","constructModal","showHelp","home","reload","showLetters","togglePanel","_this4","help_Help","reloadGame","updateSingleState","GuessList","ClassPrefix","_this$props","words","results","word","i","key","cow","bull","DIFFICULTY_MAP","easy","medium","hard","DIFFICULTY_FILE_MAP","ERROR_MSG","usedGuess","minLength","validWord","LETTERS","LettersPanel","letters","currentTarget","newProps","constructLetterState","length","_loop","toUpperCase","split","ltr","classNames","includes","push","undefined","join","openModal","target","currentValue","updateLetter","removeLetterMark","innerText","ReplyAndResponse","won","renderWonMessage","renderInputContainer","chances","guessedWords","chancesText","htmlFor","renderInput","renderError","maxLength","difficulty","animateIconClass","animateAddIcon","setTimeout","type","autoComplete","autoFocus","placeholder","onKeyUp","checkForAddition","animateInputClass","addGuess","showResult","renderAddChances","renderResult","addChance","errorMsg","dangerouslySetInnerHTML","__html","href","rel","App","guessResults","gameMode","parseInt","window","localStorage","getItem","arrWords","setWord","Math","random","toLowerCase","_this$state","remainingChances","confirm","txtGuess","value","stateProp","stateVal","stateJSON","header_Header","setGameMode","arg","letters_panel_LettersPanel","guess_list_GuessList","reply_and_response_ReplyAndResponse","assign","updateStateJson","getElementsByClassName","scrollTop","currGuess","validateGuess","getBullCow","guess","validations","validationRules","errorMsgKey","validKey","trim","indexOf","guessTxt","len","updateCoinsInfo","letterBulled","stateWord","lastIndexOf","setItem","Boolean","location","hostname","match","render","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d13f46f.chunk.js","sourcesContent":["var map = {\n\t\"./four\": [\n\t\t10,\n\t\t0\n\t],\n\t\"./four.js\": [\n\t\t10,\n\t\t0\n\t],\n\t\"./six\": [\n\t\t11,\n\t\t1\n\t],\n\t\"./six.js\": [\n\t\t11,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 20;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style/modal.scss';\n\nexport default class Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.el = this.props.el || document.getElementById('wormhole');\n    this.el.className += ' modal-container-active';\n    this.closeOnEsc = this.closeOnEsc.bind(this);\n    document.addEventListener('keydown', this.closeOnEsc, false);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.renderModal(), this.el);\n  }\n  \n  renderModal() {\n    return (\n      <div>\n        <div className=\"modal-overlay\" onClick={(e) => this.closeOnOverlay()}></div>\n        <div className={`modal ${this.props.className}`} >\n          <div className='modal-header'>{this.props.title}</div>\n          <div className='modal-body'>\n            {this.props.children}\n          </div>\n          <div className='modal-footer'>\n            {this.renderBtn('Close')}\n            {this.renderBtn('Done')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderBtn(btnType) {\n    if(this.props['show' + btnType]) {\n      return (\n        <button \n          className={`btn-${btnType}`} \n          onClick={(e) => this.props[`on${btnType}`](e)} >\n          {btnType}\n        </button>\n      )\n    }\n  }\n  \n  closeOnOverlay(e) {\n    if(!this.props['closeOnOverlay'] && typeof this.props.onClose === 'function') {\n      this.props.onClose(e)\n    }\n  }\n\n  closeOnEsc(e) {\n    if(e.keyCode === 27 && typeof this.props.onClose === 'function') {\n      this.props.onClose(e);\n    }\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('keydown', this.closeOnEsc, false);\n    this.el.className = this.el.className.replace(' modal-container-active','');\n  }\n}\n","/* eslint-disable no-loop-func */\nimport React from 'react';\nimport Modal from './modal.js'\nimport '../style/app.scss';\n\n\nexport default class Help extends React.Component {\n  \n  render() {\n    return (\n      <Modal \n        showClose={true} \n        title=\"How to Play - Bull Cow\"\n        className=\"how-to-modal\"\n        onClose={() => this.props.onHelpClose()}>\n          <article>\n            <p>\n              <strong>Bull</strong> - Tells that the letter in the challenged word matches exactly at the same position.\n            </p>\n\n            <p>\n              Challenged Word : <strong>COD<span className=\"red\">E</span></strong>\n            </p>\n\n            <p>\n                Guessed Word : <strong>GAM<span className=\"red\">E</span></strong>\n            </p>\n\n            <p>\n              The last letter <strong>E</strong> matches exactly at the same place. So, You will get <span className=\"red\">1 Bull, 0 Cow</span>\n            </p>\n          \n            <p>\n              <strong>Cow</strong> - Tells that the letter in the challenged word is present in the guessed word. But that letter is in wrong position.\n            </p>\n\n            <p>\n              Challenged Word : <strong>COD<span className=\"red\">E</span></strong>\n            </p>\n\n            <p>\n              Guessed Word : <strong><span className=\"red\">D</span>AWN</strong>\n            </p>\n\n            <p>\n              The last letter <strong>D</strong> matches, but it is in wrong position. So, You will get <span className=\"red\">0 Bull, 1 Cow</span>\n            </p>\n        </article>\n      </Modal>\n    );\n  }\n\n}\n","import React from 'react';\nimport Modal from './modal.js'\nimport Help from './help.js'\n\nconst DEFAULT_STATE = {\n  modalActive: false,\n  helpPanelActive: false\n};\nexport default class Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = DEFAULT_STATE;\n  }\n  \n  render() {\n    return (\n      <header className=\"App-header\">\n          <div className=\"coins\">{this.props.coins}</div>\n          <div className=\"title\">Code Game</div>\n          <div className=\"sub-title\">\n            <button className=\"link\" onClick={() => this.props.onStart('easy')}>Easy</button>\n            <button className=\"link\" onClick={() => this.props.onStart('medium')}>Medium</button>\n            <button className=\"link\" onClick={() => this.props.onStart('hard')}>Hard</button>\n          </div>\n          <div className=\"sub-title\" id=\"how-to-btn-container\">\n            <button className=\"btn-how-to\" onClick={() => this.setState({helpPanelActive: true})}>How to Play</button>\n          </div>\n          <div className=\"menu\" onClick={() => this.setState({modalActive: true})}>\n          </div>\n          {this.constructModal()}\n          {this.showHelp()}\n      </header>\n    );\n  }\n\n  constructModal() {\n    if(this.state.modalActive) {\n      return (\n        <Modal className=\"header-menu\"\n          onClose={(e) => this.setState({modalActive: false})}>\n          <div onClick={() => this.home()}>Home</div>\n          <div onClick={() => this.reload()}>Reload</div>\n          <div onClick={() => this.showLetters()} className=\"hide-on-big\">{(this.props.togglePanel)? 'Hide' : 'Show'} Letters</div>\n          <div onClick={() => this.setState({helpPanelActive: true})}>Help</div>\n        </Modal>\n      );\n    }\n  }\n\n  showHelp() {\n    if(this.state.helpPanelActive)\n      return (<Help onHelpClose={() => this.setState(DEFAULT_STATE)} />);\n  }\n\n  home() {\n    this.setState({modalActive: false});\n    this.props.reloadGame(false);\n  }\n\n  reload() {\n    this.setState({modalActive: false});\n    this.props.reloadGame();\n  }\n\n  showLetters() {\n    this.setState({modalActive: false});\n    this.props.updateSingleState('togglePanel', !this.props.togglePanel);\n  }\n}\n","import React from 'react';\n\nexport default class GuessList extends React.Component {\n  \n  render() {\n    let ClassPrefix = 'element-inline-middle guess-';\n\n    let { words, results } = this.props; \n\n    return (\n      <div className=\"guess-container\" >\n        {words.map((word, i) => {\n          return (\n            <div key={i} className=\"guess\" >\n              <span className={`${ClassPrefix}result guess-cow`}>\n                cow - {results[word].cow}\n              </span>\n              <span className={`${ClassPrefix}word`}> \n                {word} \n              </span>\n              <span className={`${ClassPrefix}result guess-bull`}>\n                {results[word].bull} - bull \n              </span>\n            </div>\n          )\n        })}\n      </div>\n    );\n  }\n}\n","\nconst DIFFICULTY_MAP = {\n  'easy': 4,\n  'medium': 5,\n  'hard': 6\n};\n\nconst DIFFICULTY_FILE_MAP = {\n  'easy': 'four.js',\n  'medium': 'four.js',\n  'hard': 'six.js'\n};\n\nconst ERROR_MSG = {\n  'usedGuess': 'You have already used this guess',\n  'minLength': {\n    'easy': 'Please enter a 4 letter word',\n    'medium': 'Please enter a 5 letter word',\n    'hard': 'Please enter a 6 letter word',\n  },\n  'validWord': 'Not a valid word. <a class=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:support@codegame.in?subject=Add%20missing%20word%20-%20{word}&body=Hi,%20Please%20add%20the%20missing%20word\">Report</a>'\n};\n\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nexport {\n  DIFFICULTY_MAP,\n  DIFFICULTY_FILE_MAP,\n  ERROR_MSG,\n  LETTERS\n};","/* eslint-disable no-loop-func */\nimport React from 'react';\nimport Modal from './modal.js'\nimport '../style/app.scss';\nimport { LETTERS } from '../constants.js'\n\n// TODO: Styles for Panel Switch button and responsive layout\n\nexport default class LettersPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      letters: {},\n      currentTarget: null,\n      modalActive: false\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.constructLetterState(newProps.results);\n  }\n\n  constructLetterState(results) {\n    let letters = this.state.letters;\n\n    if(results && Object.keys(results).length) {\n      for(let word in results) {  \n\n        word.toUpperCase().split('').map(ltr => {\n          let classNames = letters[ltr] || [];\n  \n          if(!(results[word].cow || results[word].bull)) {\n            classNames = ['drop'];\n          }\n          else if(!classNames.includes('drop') ) {\n            if(results[word].cow && !classNames.includes('cow')) classNames.push('cow');\n            if(results[word].bull && !classNames.includes('bull')) classNames.push('bull');\n          }\n  \n          letters[ltr] = classNames;\n        });\n        \n      } \n    } else {\n      letters = {}\n    }\n    \n    this.setState({letters: letters});\n  }\n\n  render() {\n    return (\n      <section id=\"letters-panel\">\n        {LETTERS.map((ltr, i) => {\n          let className = (this.state.letters[ltr] !== undefined) ? \n                            this.state.letters[ltr].join(' ') : '';\n          return (\n            <div key={i} \n              className={`letter ${className}`}\n              onClick={(e) => this.openModal(e.target)}>\n              {ltr}\n            </div>\n          )\n        })}\n        {this.constructModal()}\n      </section>\n    );\n  }\n\n  constructModal() {\n    if(this.state.modalActive) {\n      return (\n        <Modal \n          showClose={true} \n          title={`Mark letter '${this.state.currentValue}' as`}\n          onClose={(e) => this.setState({modalActive: false})}>\n          <button className=\"btn cow\" onClick={(e) => this.updateLetter('cow')}>Cow</button>\n          <button className=\"btn bull\" onClick={(e) => this.updateLetter('bull')}>Bull</button>\n          <button className=\"btn drop\" onClick={(e) => this.updateLetter('drop')}>Reject</button>\n          <button className=\"btn\" onClick={(e) => this.removeLetterMark()}>Remove Marking</button>\n        </Modal>\n      );\n    }\n  }\n\n  openModal(target) {\n    this.setState({\n      modalActive: true,\n      currentValue: target.innerText\n    })\n  }\n\n  updateLetter(className) {\n    let letters = this.state.letters;\n    letters[this.state.currentValue] = ['forced', className];\n    this.setState({\n      letters: letters,\n      modalActive: false\n    });\n  }\n\n  removeLetterMark() {\n    let letters = this.state.letters;\n    letters[this.state.currentValue] = [];\n    this.setState({\n      letters: letters,\n      modalActive: false\n    });\n  }\n\n}\n","import React from 'react';\nimport { DIFFICULTY_MAP } from '../constants.js'\n\nexport default class ReplyAndResponse extends React.Component {\n\n  render() {\n    return this.props.won? this.renderWonMessage() : this.renderInputContainer();\n  }\n\n  renderInputContainer() {\n    let chances = this.props.chances - this.props.guessedWords.length;\n\n    let chancesText = (<label htmlFor=\"txt-guess\">\n                        You have <strong>{chances}</strong> chances left\n                      </label>);\n\n    if(chances === 0)\n      chancesText = (<label>You have used all your chances</label>);\n      \n    return (\n      <div className=\"game__input-container\">\n        {chancesText}\n        {this.renderInput(chances)}\n        {this.renderError()}\n      </div>\n    );\n  }\n  \n  renderInput(chances) {\n    let maxLength = DIFFICULTY_MAP[this.props.difficulty];\n\n\n    let animateIconClass = '';\n    if(this.props.animateAddIcon){\n      animateIconClass = 'animate-add';\n      setTimeout(() => { this.props.updateSingleState('animateAddIcon', false) }, 1000);\n    }\n\n    if(chances > 0) {\n        return (\n          <div className=\"reply-container\">\n            <button \n              className=\"btn-toggle-panel\" \n              onClick={(e) => this.props.updateSingleState('togglePanel', !this.props.togglePanel)}>\n                A\n            </button>\n            <input id=\"txt-guess\" \n              type=\"text\" \n              autoComplete=\"off\" \n              autoFocus={true} \n              maxLength={maxLength} \n              placeholder={`Guess ${maxLength} letter word`}\n              onKeyUp={(e) => this.checkForAddition(e)} />\n            <button \n              className={`btn-add ${this.props.animateInputClass + ' ' + animateIconClass}`}\n              onClick={() => this.props.addGuess()}>\n                <div></div>\n            </button>\n          </div>\n        );\n    } else if (this.props.coins >= 5 && !this.props.showResult) {\n      return this.renderAddChances();\n    } else {\n      return this.renderResult();\n    }\n  }\n\n  renderAddChances() {\n    return (\n        <div className=\"add-chances-container\"> \n          <span className=\"add-chance\" onClick={(e) => this.props.addChance()}>Add 5 more chances for 5 coins </span>\n          or\n          <span className=\"show-answer\" onClick={(e) => this.props.updateSingleState('showResult', true)}>Show answer?</span>\n        </div>\n    );\n  }\n  \n  renderError(){\n    return (this.props.errorMsg.length) ?\n       (<span className=\"animated fadeInDown fast\" dangerouslySetInnerHTML={{__html: this.props.errorMsg}} ></span>) :\n       (<span className=\"element-inline-middle soft-hide\">No Errors</span>);\n  }\n\n  renderWonMessage() {\n    return (\n      <div className=\"won-message\">\n        <span className=\"element-inline-middle\">WOW! You guessed is right!!! It is&nbsp;</span>\n        <a className=\"element-inline-middle link animated flash\" \n          href={`https://www.thefreedictionary.com/${this.props.word}`} \n          target=\"_blank\" rel=\"noopener noreferrer\" >\n          {this.props.word.toUpperCase()}\n        </a>\n        <div className=\"link\" onClick={(e) => this.props.reloadGame()}>Play again</div>\n      </div>\n    )\n  }\n\n  renderResult() {\n    return (\n      <div className=\"result-container\">\n        <span className=\"result\">The word is </span>\n        <a className=\"result link\" href={`https://www.thefreedictionary.com/${this.props.word}`} target=\"_blank\">\n          {this.props.word.toUpperCase()}\n        </a>\n        <div className=\"link\" onClick={(e) => this.props.reloadGame()}>Retry again</div>\n      </div>\n    )\n  }\n\n  checkForAddition(e){\n    if(e.keyCode === 13) \n      this.props.addGuess();\n  }\n}\n","\n/* TODO: \n    * Add Medium difficulty (5 letter words)\n    * Add more Specific animation styling won message\n*/\n\nimport React from 'react';\nimport Header from './layout/header.js'\nimport GuessList from './layout/guess-list.js'\nimport LettersPanel from './layout/letters-panel.js'\nimport ReplyAndResponse from './layout/reply-and-response.js';\nimport './style/app.scss';\nimport { DIFFICULTY_MAP, DIFFICULTY_FILE_MAP, ERROR_MSG } from './constants.js'\n\nexport default class App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.guessResults = {};\n    this.state = {\n      gameMode: false,\n      difficulty: null,\n      word: '',\n      won: false,\n      coins: parseInt(window.localStorage.getItem('coins')) || 0,\n      guessedWords: [],\n      chances: 10,\n      showResult: false,\n      animateInputClass: 'animated',\n      errorMsg: '',\n      togglePanel: false,\n      animateAddIcon: false,\n    };\n  }\n  \n  // Imports the words based on the difficulty level\n  setGameMode(difficulty) {\n    import(\"./words/\" + DIFFICULTY_FILE_MAP[difficulty]).then(arrWords => {\n      this.words = arrWords.words;\n      this.setState({\n        gameMode: true,\n        difficulty: difficulty,\n        word: this.setWord()\n      });\n    });  \n  }\n  \n  setWord() {\n    return (this.words[parseInt(Math.random() * this.words.length)]).toLowerCase();\n  }\n  \n  reloadGame(gameMode) {\n    let {won, chances, guessedWords} = this.state;\n    let remainingChances = chances - this.state.guessedWords.length;\n\n    let userConfirmation = ((guessedWords.length && !won) && remainingChances) ?\n                              window.confirm(\"Do you want leave this game and start fresh?\") :\n                              true;\n\n    if (userConfirmation) {\n      // Reset the textbox\n      let txtGuess = document.getElementById('txt-guess');\n      if (txtGuess) txtGuess.value = '';\n\n      this.guessResults = {};\n      this.setState({\n        word: this.setWord(),\n        guessedWords: [],\n        won: false,\n        chances: 10,\n        showResult: false,\n        togglePanel: false,\n        gameMode: (gameMode !== undefined)?gameMode:true\n      });\n\n    }\n  }\n\n  updateSingleState(stateProp, stateVal) {\n    let stateJSON = {};\n    stateJSON[stateProp] = stateVal;\n    this.setState(stateJSON);\n  }\n\n  updateStateJson(stateJSON) {\n    this.setState(stateJSON);\n  }\n  \n  render() {\n    return (\n      <div className={\"App gamemode-\" + (this.state.gameMode?\"on\":\"off\")}>\n        <Header \n          coins={this.state.coins} \n          onStart={(difficulty) => {this.setGameMode(difficulty)}} \n          reloadGame={(arg)=>this.reloadGame(arg)}\n          togglePanel={this.state.togglePanel}\n          updateSingleState={(stateProp, stateVal) => this.updateSingleState(stateProp, stateVal)} />\n        <div className={`game ${(this.state.togglePanel)?'toggle-to-letters':null}`}>\n            <div className=\"dummy\"></div>\n            <LettersPanel results={this.guessResults} />\n            <GuessList words={this.state.guessedWords} results={this.guessResults}  />\n\n            <ReplyAndResponse \n              addGuess={(e) => this.addGuess(e)}\n              reloadGame={() => this.reloadGame()}\n              updateSingleState={(stateProp, stateVal) => this.updateSingleState(stateProp, stateVal)}\n              updateStateJson={(stateJSON) => this.updateStateJson(stateJSON)}\n              addChance={() => this.addChance()}\n              {...this.state}\n            />\n\n            <div className=\"dummy-big\"></div>\n        </div>\n        <div id=\"wormhole\" />\n      </div>\n    );\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      document.getElementsByClassName('guess-container')[0].scrollTop += 500;\n    }, 100);\n  }\n  \n  addGuess() {\n    let currGuess = document.getElementById('txt-guess').value.toLowerCase();\n    if(this.validateGuess(currGuess)) {\n      if(this.getBullCow(currGuess)) {\n        let guessedWords = this.state.guessedWords;\n        guessedWords.push(currGuess);\n        this.setState({\n          guessedWords: guessedWords,\n          animateAddIcon: true,\n          togglePanel: false\n        })\n        document.getElementById('txt-guess').value = '';\n      }\n    }\n  }\n  \n  validateGuess(guess) {\n    let validations = this.validationRules(guess.toLowerCase());\n    \n    // Show Error if Any one of three (1/3) validation fails.\n    if (validations.usedGuess || validations.minLength || validations.validWord) {\n      let errorMsgKey;\n\n      // Get the first validation error and breaks the loop\n      for(let validKey in validations) {\n        if(validations[validKey]) {\n          errorMsgKey = validKey;\n          break;\n        }\n      }\n      \n      let errorMsg = ERROR_MSG[errorMsgKey];\n      errorMsg = (typeof errorMsg === 'string') ? \n                    errorMsg.replace('{word}', guess) : \n                    errorMsg[this.state.difficulty];\n\n      this.setState({\n        animateInputClass: 'animated shake fast',\n        errorMsg: errorMsg,\n        togglePanel: false\n      });\n      setTimeout(() => {this.setState({animateInputClass: 'animated'})}, 600);\n      return false;\n    } \n    // Reset Error message on all validation success\n    else {\n      this.setState({\n        errorMsg: ''\n      })\n      return true;\n    }\n  }\n  \n  // Returns a JSON Object for validation failures \n  // If validation fails, it returns true. Else false\n  validationRules(guess) {\n    return {\n      minLength: (guess.trim().length < DIFFICULTY_MAP[this.state.difficulty]),\n      validWord: (this.words.indexOf(guess) < 0),\n      usedGuess: (this.state.guessedWords.indexOf(guess.trim()) > -1)\n    }\n  }\n  \n  // Calculates the Bull and Cow Length of the give Guess\n  getBullCow(guessTxt) {\n    let guess = guessTxt.toLowerCase();\n    let len = guess.length, bull = 0, cow = 0;\n    if(guess === this.state.word) {\n        this.setState({\n          won: true,\n          coins: (this.state.coins + 5)\n        });\n        this.updateCoinsInfo(this.state.coins + 5);\n        return false;\n    }\n    for(let i=0; i<len; i++) {\n      let letterBulled = false, stateWord = this.state.word;\n        // Check for Bulls\n        if(guess[i] === stateWord[i]) {\n          bull++;\n          letterBulled = true;\n        }\n          \n        // Check for Cows - If the letter is already added as Bull, then ignore\n        if(stateWord.indexOf(guess[i]) !== -1 && !letterBulled) {\n          cow++;\n          // To Check for mulitple letters => Currenly supports only 2 letters\n          if(stateWord.indexOf(guess[i]) !== stateWord.lastIndexOf(guess[i]))\n            cow++;\n        }    \n    }\n    this.guessResults[guessTxt] = {bull: bull, cow: cow};\n    return true;\n  }\n\n  // Adding Changes using Coins - 5 for 5\n  addChance() {\n    if(this.state.coins >= 5) {\n      this.setState({\n        coins: (this.state.coins - 5),\n        chances: (this.state.chances + 5)\n      });\n      this.updateCoinsInfo(this.state.coins - 5);\n    }\n  }\n\n  // Sets the coins in Local storage\n  updateCoinsInfo(coins) {\n    window.localStorage.setItem('coins', coins);\n  }\n\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}